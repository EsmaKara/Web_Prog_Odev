@{
    Layout = "~/Views/Shared/_LayoutNavbarFooter.cshtml";
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Nöbet ve Randevu Takvimi</title>

    <style>
        body {
            font-family: 'Arial', sans-serif;
            background-color: #fffbea;
            color: #333;
        }

        h2 {
            text-align: center;
            color: #ffd633;
        }

        #calendar {
            width: 90%;
            margin: 20px auto;
            border-collapse: collapse;
            background: #fff;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            border-radius: 10px;
        }

            #calendar th, #calendar td {
                width: 14.28%;
                text-align: center;
                padding: 10px;
                border: 1px solid #ddd;
            }

            #calendar th {
                background-color: #ffd633;
                color: white;
            }

        .empty {
            background-color: #f9f9f9;
        }

        .dolu {
            background-color: #fff5cc;
            position: relative;
        }

        .musait {
            background-color: #e6ffe6;
        }

        .nobet-details {
            font-size: 12px;
            margin-top: 5px;
        }

        #monthControl {
            display: flex;
            justify-content: center;
            align-items: center;
            margin: 20px 0;
        }

            #monthControl button {
                background-color: #ffd633;
                color: white;
                border: none;
                padding: 10px 15px;
                margin: 0 10px;
                cursor: pointer;
                border-radius: 5px;
                font-size: 14px;
            }

                #monthControl button:hover {
                    background-color: #e6b800;
                }

        #currentMonth {
            font-size: 18px;
            font-weight: bold;
        }

        a#listebuton {
            display: inline-block;
            background-color: #ffd633;
            color: white;
            text-decoration: none;
            padding: 10px 15px;
            margin: 10px auto;
            border-radius: 5px;
            font-size: 14px;
            text-align: center;
        }

            a#listebuton:hover {
                background-color: #e6b800;
            }
    </style>
</head>
<body>
    <h2>Nöbet ve Randevu Takvimi</h2>

    <div id="monthControl">
        <button onclick="changeMonth(-1)">Önceki Ay</button>
        <span id="currentMonth"></span>
        <button onclick="changeMonth(1)">Sonraki Ay</button>
    </div>

    <div>
        @if (Session["IsAdmin"] != null && (bool)Session["IsAdmin"])
        {
            <a href="@Url.Action("NobetListele", "Nobet")" id="listebuton">List Shifts</a>
        }
    </div>

    <table id="calendar">
        <thead>
            <tr>
                <th>Paz</th>
                <th>Pzt</th>
                <th>Sal</th>
                <th>Çar</th>
                <th>Per</th>
                <th>Cum</th>
                <th>Cmt</th>
            </tr>
        </thead>
        <tbody>
            <!-- Günler AJAX ile doldurulacak -->
        </tbody>
    </table>

    <script src="~/Scripts/jquery-3.7.1.js"></script> <!-- jQuery yolu -->

    <script>
        let currentMonth = new Date();
        let currentYear = currentMonth.getFullYear();
        let currentMonthIndex = currentMonth.getMonth();

        function renderCalendar() {
            const monthName = new Date(currentYear, currentMonthIndex).toLocaleString('tr-TR', { month: 'long' });
            document.getElementById('currentMonth').textContent = `${monthName} ${currentYear}`;

            $.ajax({
                url: '@Url.Action("GetCalendarData", "Shift")',
                method: 'GET',
                data: {
                    start: new Date(currentYear, currentMonthIndex, 1).toISOString(),
                    end: new Date(currentYear, currentMonthIndex + 1, 0).toISOString()
                },
                success: function (events) {
                    generateCalendarDays(events);
                },
                error: function () {
                    alert('Takvim verisi alınırken bir hata oluştu.');
                }
            });
        }

        function generateCalendarDays(events) {
            const tbody = $('#calendar tbody');
            tbody.empty();

            const firstDayOfMonth = new Date(currentYear, currentMonthIndex, 1);
            const lastDateOfMonth = new Date(currentYear, currentMonthIndex + 1, 0).getDate();
            const firstDayOfWeek = firstDayOfMonth.getDay();

            let dayCounter = 1;
            let row = $('<tr></tr>');

            for (let i = 0; i < firstDayOfWeek; i++) {
                row.append('<td class="empty"></td>');
            }

            for (let day = firstDayOfWeek; day < 7; day++) {
                if (dayCounter <= lastDateOfMonth) {
                    row.append(generateDayCell(dayCounter, events));
                    dayCounter++;
                }
            }
            tbody.append(row);

            while (dayCounter <= lastDateOfMonth) {
                row = $('<tr></tr>');
                for (let day = 0; day < 7; day++) {
                    if (dayCounter <= lastDateOfMonth) {
                        row.append(generateDayCell(dayCounter, events));
                        dayCounter++;
                    }
                }
                tbody.append(row);
            }
        }

        function generateDayCell(day, events) {
            const cell = $('<td></td>');
            const date = new Date(currentYear, currentMonthIndex, day);
            const dayEvents = events.filter(event => new Date(event.start).toDateString() === date.toDateString());

            cell.text(day);

            if (dayEvents.length > 0) {
                const eventDetails = dayEvents.map(event => `
                        <div class="nobet-details">
                            ${event.title}<br>
                            ${new Date(event.start).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })} -
                            ${new Date(event.end).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}
                        </div>
                    `).join("");
                cell.addClass('dolu');
                cell.append(eventDetails);
            } else {
                cell.addClass('musait');
                cell.append('<div>Müsait</div>');
            }

            return cell;
        }

        function changeMonth(offset) {
            currentMonthIndex += offset;
            if (currentMonthIndex < 0) {
                currentMonthIndex = 11;
                currentYear--;
            } else if (currentMonthIndex > 11) {
                currentMonthIndex = 0;
                currentYear++;
            }
            renderCalendar();
        }

        renderCalendar();
    </script>
</body>
</html>
