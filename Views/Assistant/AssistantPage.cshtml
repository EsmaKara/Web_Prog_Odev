@using Web_Prog_Odev.Models
@model List<Web_Prog_Odev.Models.Assistant>

@{
    Layout = "~/Views/Shared/_LayoutNavbarFooter.cshtml";
}
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>AssistantView</title>

    <style>
        @{ 
            Html.RenderPartial("~/Views/Shared/PartialPages/CSS/CardsCSS.cshtml");
            Html.RenderPartial("~/Views/Shared/PartialPages/CSS/CRUDButtonsCSS.cshtml");
         }



        .add-data{
            display:block;
        }
            .add-data btn {
                background-color: #007bff;
                color: #fff; /* Yazı rengi */
                border: none; /* Çerçeveyi kaldır */
                border-radius: 5px; /* Yuvarlatılmış köşeler */
                padding: 10px 20px; /* İç boşluklar */
                font-size: 18px; /* Yazı boyutu */
                cursor: pointer; /* İmleç tipi */
            }

        .button-container {
            display: flex;
            justify-content: center; /* Yatayda ortalama */
            align-items: center; /* Dikeyde ortalama (div'in yüksekliği ayarlanmışsa) */
            width: 100%; /* Tam genişlik */
            padding: 20px 0; /* Üst-alt boşluk */
        }
    </style>

</head>
<body>

    <!-- Kart yapısı -->
    <div>
        <h1 style="text-align: center; color: #333333;">Our Assistants</h1>


        @{
            if (Session["IsAdmin"] == null || !(bool)Session["IsAdmin"])
            {

            }
            else
            {
                // yeni bir veri eklemek için
                <div class="add-data">
                    @{
                        ViewBag.AddUrl = Url.Action("AddData", "Assistant");

                        Html.RenderPartial("~/Views/Shared/PartialPages/AddButton.cshtml");
                    }
                </div>
            }
        }


        <div class="container">
            @{
                // admin girişi yapılmadıysa sadece verileri görüntüler
                if (Session["IsAdmin"] == null || !(bool)Session["IsAdmin"])
                {
                    foreach (Assistant assistant in Model.ToList())
                    {
                        <div class="card">

                            <h3 style="display:inline; text-align:center;">@assistant.AssistName @assistant.AssistSurname</h3>

                            <div class="information">
                                <b>Contact Number: </b><span>@assistant.AssistTel</span>
                            </div>
                            <div class="information">
                                <b>Mail Address: </b><span>@assistant.AssistMail</span>
                            </div>
                            <div class="information">
                                <b>Shifting State: </b>
                                @{
                                    var varsa = assistant.ShiftList.Where(s => s.ShiftStart <= DateTime.Now && s.ShiftEnd > DateTime.Now).Select(s => new
                                    {
                                        s.ShiftEnd,
                                        s.DepartmentR.DepartmentName
                                    }).Distinct().ToList().FirstOrDefault();

                                    string statement;
                                    string statementInfo;
                                    string style;

                                    if (varsa != null)
                                    {
                                        statement = "On Shift.";
                                        statementInfo = "Has a shift in the " + varsa.DepartmentName.ToString() + " Department until " + varsa.ShiftEnd;
                                        style = "color: #ff6600;";
                                    }
                                    else
                                    {
                                        statement = "Available now.";
                                        statementInfo = null;
                                        style = "color: #99cc00;";
                                    }
                                }
                                <span style="@style">  @statement </span>
                                <i style="display:block;">@statementInfo</i>
                            </div>

                        </div>
                    }
                }


                // admin girişi yapıldıysa CRUD işlemleri yapılabilmeli
                else
                {

                    // Düzenlemek için ilgili card yapısı
                    foreach (Assistant assistant in Model.ToList())
                    {
                        <div class="card">
                            <h3 style="display:inline; text-align:center;">@assistant.AssistName @assistant.AssistSurname</h3>

                            <div class="information">
                                <b>Contact Number: </b><span>@assistant.AssistTel</span>
                            </div>
                            <div class="information">
                                <b>Mail Address: </b><span>@assistant.AssistMail</span>
                            </div>


                            @{
                                // ViewBag ile admin CRUD işlemleri butonları URL'leri tanımlanıyor
                                ViewBag.EditUrl = Url.Action("EditData", "Assistant", new { assistId = assistant.AssistantID });
                                ViewBag.DeleteUrl = Url.Action("Delete", "Assistant", new { assistId = assistant.AssistantID });

                                Html.RenderPartial("~/Views/Shared/PartialPages/CRUDButtons.cshtml");
                            }

                        </div>
                    }
                }
            }

        </div>
    </div>


</body>
</html>
